/**
 * generated by Xtext 2.13.0
 */
package mx.infotec.dads.kukulkan.kukulkan.impl;

import mx.infotec.dads.kukulkan.kukulkan.KukulkanPackage;
import mx.infotec.dads.kukulkan.kukulkan.associationField;
import mx.infotec.dads.kukulkan.kukulkan.entity;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>association Field</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mx.infotec.dads.kukulkan.kukulkan.impl.associationFieldImpl#getType <em>Type</em>}</li>
 *   <li>{@link mx.infotec.dads.kukulkan.kukulkan.impl.associationFieldImpl#getToSourcePropertyName <em>To Source Property Name</em>}</li>
 *   <li>{@link mx.infotec.dads.kukulkan.kukulkan.impl.associationFieldImpl#getTargetEntity <em>Target Entity</em>}</li>
 * </ul>
 *
 * @generated
 */
public class associationFieldImpl extends entityFieldImpl implements associationField
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getToSourcePropertyName() <em>To Source Property Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToSourcePropertyName()
   * @generated
   * @ordered
   */
  protected static final String TO_SOURCE_PROPERTY_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getToSourcePropertyName() <em>To Source Property Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToSourcePropertyName()
   * @generated
   * @ordered
   */
  protected String toSourcePropertyName = TO_SOURCE_PROPERTY_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getTargetEntity() <em>Target Entity</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTargetEntity()
   * @generated
   * @ordered
   */
  protected entity targetEntity;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected associationFieldImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KukulkanPackage.Literals.ASSOCIATION_FIELD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KukulkanPackage.ASSOCIATION_FIELD__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getToSourcePropertyName()
  {
    return toSourcePropertyName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setToSourcePropertyName(String newToSourcePropertyName)
  {
    String oldToSourcePropertyName = toSourcePropertyName;
    toSourcePropertyName = newToSourcePropertyName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KukulkanPackage.ASSOCIATION_FIELD__TO_SOURCE_PROPERTY_NAME, oldToSourcePropertyName, toSourcePropertyName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public entity getTargetEntity()
  {
    if (targetEntity != null && targetEntity.eIsProxy())
    {
      InternalEObject oldTargetEntity = (InternalEObject)targetEntity;
      targetEntity = (entity)eResolveProxy(oldTargetEntity);
      if (targetEntity != oldTargetEntity)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, KukulkanPackage.ASSOCIATION_FIELD__TARGET_ENTITY, oldTargetEntity, targetEntity));
      }
    }
    return targetEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public entity basicGetTargetEntity()
  {
    return targetEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTargetEntity(entity newTargetEntity)
  {
    entity oldTargetEntity = targetEntity;
    targetEntity = newTargetEntity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KukulkanPackage.ASSOCIATION_FIELD__TARGET_ENTITY, oldTargetEntity, targetEntity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KukulkanPackage.ASSOCIATION_FIELD__TYPE:
        return getType();
      case KukulkanPackage.ASSOCIATION_FIELD__TO_SOURCE_PROPERTY_NAME:
        return getToSourcePropertyName();
      case KukulkanPackage.ASSOCIATION_FIELD__TARGET_ENTITY:
        if (resolve) return getTargetEntity();
        return basicGetTargetEntity();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KukulkanPackage.ASSOCIATION_FIELD__TYPE:
        setType((String)newValue);
        return;
      case KukulkanPackage.ASSOCIATION_FIELD__TO_SOURCE_PROPERTY_NAME:
        setToSourcePropertyName((String)newValue);
        return;
      case KukulkanPackage.ASSOCIATION_FIELD__TARGET_ENTITY:
        setTargetEntity((entity)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KukulkanPackage.ASSOCIATION_FIELD__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case KukulkanPackage.ASSOCIATION_FIELD__TO_SOURCE_PROPERTY_NAME:
        setToSourcePropertyName(TO_SOURCE_PROPERTY_NAME_EDEFAULT);
        return;
      case KukulkanPackage.ASSOCIATION_FIELD__TARGET_ENTITY:
        setTargetEntity((entity)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KukulkanPackage.ASSOCIATION_FIELD__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case KukulkanPackage.ASSOCIATION_FIELD__TO_SOURCE_PROPERTY_NAME:
        return TO_SOURCE_PROPERTY_NAME_EDEFAULT == null ? toSourcePropertyName != null : !TO_SOURCE_PROPERTY_NAME_EDEFAULT.equals(toSourcePropertyName);
      case KukulkanPackage.ASSOCIATION_FIELD__TARGET_ENTITY:
        return targetEntity != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", toSourcePropertyName: ");
    result.append(toSourcePropertyName);
    result.append(')');
    return result.toString();
  }

} //associationFieldImpl
