/*
 * generated by Xtext 2.13.0
 */
grammar InternalKukulkan;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package mx.infotec.dads.kukulkan.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package mx.infotec.dads.kukulkan.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import mx.infotec.dads.kukulkan.services.KukulkanGrammarAccess;

}
@parser::members {
	private KukulkanGrammarAccess grammarAccess;

	public void setGrammarAccess(KukulkanGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuledomainModel
entryRuledomainModel
:
{ before(grammarAccess.getDomainModelRule()); }
	 ruledomainModel
{ after(grammarAccess.getDomainModelRule()); } 
	 EOF 
;

// Rule domainModel
ruledomainModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getDomainModelAccess().getEntitiesAssignment()); }
			(rule__DomainModel__EntitiesAssignment)
			{ after(grammarAccess.getDomainModelAccess().getEntitiesAssignment()); }
		)
		(
			{ before(grammarAccess.getDomainModelAccess().getEntitiesAssignment()); }
			(rule__DomainModel__EntitiesAssignment)*
			{ after(grammarAccess.getDomainModelAccess().getEntitiesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleentity
entryRuleentity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleentity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule entity
ruleentity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleentityField
entryRuleentityField
:
{ before(grammarAccess.getEntityFieldRule()); }
	 ruleentityField
{ after(grammarAccess.getEntityFieldRule()); } 
	 EOF 
;

// Rule entityField
ruleentityField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityFieldAccess().getAlternatives()); }
		(rule__EntityField__Alternatives)
		{ after(grammarAccess.getEntityFieldAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimitiveField
entryRuleprimitiveField
:
{ before(grammarAccess.getPrimitiveFieldRule()); }
	 ruleprimitiveField
{ after(grammarAccess.getPrimitiveFieldRule()); } 
	 EOF 
;

// Rule primitiveField
ruleprimitiveField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveFieldAccess().getGroup()); }
		(rule__PrimitiveField__Group__0)
		{ after(grammarAccess.getPrimitiveFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefieldType
entryRulefieldType
:
{ before(grammarAccess.getFieldTypeRule()); }
	 rulefieldType
{ after(grammarAccess.getFieldTypeRule()); } 
	 EOF 
;

// Rule fieldType
rulefieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldTypeAccess().getAlternatives()); }
		(rule__FieldType__Alternatives)
		{ after(grammarAccess.getFieldTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassociationField
entryRuleassociationField
:
{ before(grammarAccess.getAssociationFieldRule()); }
	 ruleassociationField
{ after(grammarAccess.getAssociationFieldRule()); } 
	 EOF 
;

// Rule associationField
ruleassociationField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationFieldAccess().getGroup()); }
		(rule__AssociationField__Group__0)
		{ after(grammarAccess.getAssociationFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestringFieldType
entryRulestringFieldType
:
{ before(grammarAccess.getStringFieldTypeRule()); }
	 rulestringFieldType
{ after(grammarAccess.getStringFieldTypeRule()); } 
	 EOF 
;

// Rule stringFieldType
rulestringFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringFieldTypeAccess().getGroup()); }
		(rule__StringFieldType__Group__0)
		{ after(grammarAccess.getStringFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestringType
entryRulestringType
:
{ before(grammarAccess.getStringTypeRule()); }
	 rulestringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule stringType
rulestringType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringTypeAccess().getSTRING_KEYWORDTerminalRuleCall()); }
		RULE_STRING_KEYWORD
		{ after(grammarAccess.getStringTypeAccess().getSTRING_KEYWORDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenumericFieldType
entryRulenumericFieldType
:
{ before(grammarAccess.getNumericFieldTypeRule()); }
	 rulenumericFieldType
{ after(grammarAccess.getNumericFieldTypeRule()); } 
	 EOF 
;

// Rule numericFieldType
rulenumericFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericFieldTypeAccess().getGroup()); }
		(rule__NumericFieldType__Group__0)
		{ after(grammarAccess.getNumericFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenumericTypes
entryRulenumericTypes
:
{ before(grammarAccess.getNumericTypesRule()); }
	 rulenumericTypes
{ after(grammarAccess.getNumericTypesRule()); } 
	 EOF 
;

// Rule numericTypes
rulenumericTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericTypesAccess().getAlternatives()); }
		(rule__NumericTypes__Alternatives)
		{ after(grammarAccess.getNumericTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebooleanFieldType
entryRulebooleanFieldType
:
{ before(grammarAccess.getBooleanFieldTypeRule()); }
	 rulebooleanFieldType
{ after(grammarAccess.getBooleanFieldTypeRule()); } 
	 EOF 
;

// Rule booleanFieldType
rulebooleanFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanFieldTypeAccess().getGroup()); }
		(rule__BooleanFieldType__Group__0)
		{ after(grammarAccess.getBooleanFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledateFieldType
entryRuledateFieldType
:
{ before(grammarAccess.getDateFieldTypeRule()); }
	 ruledateFieldType
{ after(grammarAccess.getDateFieldTypeRule()); } 
	 EOF 
;

// Rule dateFieldType
ruledateFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateFieldTypeAccess().getGroup()); }
		(rule__DateFieldType__Group__0)
		{ after(grammarAccess.getDateFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledateTypes
entryRuledateTypes
:
{ before(grammarAccess.getDateTypesRule()); }
	 ruledateTypes
{ after(grammarAccess.getDateTypesRule()); } 
	 EOF 
;

// Rule dateTypes
ruledateTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateTypesAccess().getAlternatives()); }
		(rule__DateTypes__Alternatives)
		{ after(grammarAccess.getDateTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblobFieldType
entryRuleblobFieldType
:
{ before(grammarAccess.getBlobFieldTypeRule()); }
	 ruleblobFieldType
{ after(grammarAccess.getBlobFieldTypeRule()); } 
	 EOF 
;

// Rule blobFieldType
ruleblobFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlobFieldTypeAccess().getGroup()); }
		(rule__BlobFieldType__Group__0)
		{ after(grammarAccess.getBlobFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblobTypes
entryRuleblobTypes
:
{ before(grammarAccess.getBlobTypesRule()); }
	 ruleblobTypes
{ after(grammarAccess.getBlobTypesRule()); } 
	 EOF 
;

// Rule blobTypes
ruleblobTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlobTypesAccess().getAlternatives()); }
		(rule__BlobTypes__Alternatives)
		{ after(grammarAccess.getBlobTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestringValidators
entryRulestringValidators
:
{ before(grammarAccess.getStringValidatorsRule()); }
	 rulestringValidators
{ after(grammarAccess.getStringValidatorsRule()); } 
	 EOF 
;

// Rule stringValidators
rulestringValidators 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getAlternatives()); }
		(rule__StringValidators__Alternatives)
		{ after(grammarAccess.getStringValidatorsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenumericValidators
entryRulenumericValidators
:
{ before(grammarAccess.getNumericValidatorsRule()); }
	 rulenumericValidators
{ after(grammarAccess.getNumericValidatorsRule()); } 
	 EOF 
;

// Rule numericValidators
rulenumericValidators 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getAlternatives()); }
		(rule__NumericValidators__Alternatives)
		{ after(grammarAccess.getNumericValidatorsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblobValidators
entryRuleblobValidators
:
{ before(grammarAccess.getBlobValidatorsRule()); }
	 ruleblobValidators
{ after(grammarAccess.getBlobValidatorsRule()); } 
	 EOF 
;

// Rule blobValidators
ruleblobValidators 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getAlternatives()); }
		(rule__BlobValidators__Alternatives)
		{ after(grammarAccess.getBlobValidatorsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerequiredValidator
entryRulerequiredValidator
:
{ before(grammarAccess.getRequiredValidatorRule()); }
	 rulerequiredValidator
{ after(grammarAccess.getRequiredValidatorRule()); } 
	 EOF 
;

// Rule requiredValidator
rulerequiredValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequiredValidatorAccess().getREQUIREDTerminalRuleCall()); }
		RULE_REQUIRED
		{ after(grammarAccess.getRequiredValidatorAccess().getREQUIREDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepatternValidator
entryRulepatternValidator
:
{ before(grammarAccess.getPatternValidatorRule()); }
	 rulepatternValidator
{ after(grammarAccess.getPatternValidatorRule()); } 
	 EOF 
;

// Rule patternValidator
rulepatternValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternValidatorAccess().getGroup()); }
		(rule__PatternValidator__Group__0)
		{ after(grammarAccess.getPatternValidatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleminValidator
entryRuleminValidator
:
{ before(grammarAccess.getMinValidatorRule()); }
	 ruleminValidator
{ after(grammarAccess.getMinValidatorRule()); } 
	 EOF 
;

// Rule minValidator
ruleminValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinValidatorAccess().getGroup()); }
		(rule__MinValidator__Group__0)
		{ after(grammarAccess.getMinValidatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemaxValidator
entryRulemaxValidator
:
{ before(grammarAccess.getMaxValidatorRule()); }
	 rulemaxValidator
{ after(grammarAccess.getMaxValidatorRule()); } 
	 EOF 
;

// Rule maxValidator
rulemaxValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxValidatorAccess().getGroup()); }
		(rule__MaxValidator__Group__0)
		{ after(grammarAccess.getMaxValidatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecardinality
entryRulecardinality
:
{ before(grammarAccess.getCardinalityRule()); }
	 rulecardinality
{ after(grammarAccess.getCardinalityRule()); } 
	 EOF 
;

// Rule cardinality
rulecardinality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardinalityAccess().getAlternatives()); }
		(rule__Cardinality__Alternatives)
		{ after(grammarAccess.getCardinalityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityField__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityFieldAccess().getPrimitiveFieldParserRuleCall_0()); }
		ruleprimitiveField
		{ after(grammarAccess.getEntityFieldAccess().getPrimitiveFieldParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntityFieldAccess().getAssociationFieldParserRuleCall_1()); }
		ruleassociationField
		{ after(grammarAccess.getEntityFieldAccess().getAssociationFieldParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldTypeAccess().getStringFieldTypeParserRuleCall_0()); }
		rulestringFieldType
		{ after(grammarAccess.getFieldTypeAccess().getStringFieldTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldTypeAccess().getNumericFieldTypeParserRuleCall_1()); }
		rulenumericFieldType
		{ after(grammarAccess.getFieldTypeAccess().getNumericFieldTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFieldTypeAccess().getBooleanFieldTypeParserRuleCall_2()); }
		rulebooleanFieldType
		{ after(grammarAccess.getFieldTypeAccess().getBooleanFieldTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFieldTypeAccess().getDateFieldTypeParserRuleCall_3()); }
		ruledateFieldType
		{ after(grammarAccess.getFieldTypeAccess().getDateFieldTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getFieldTypeAccess().getBlobFieldTypeParserRuleCall_4()); }
		ruleblobFieldType
		{ after(grammarAccess.getFieldTypeAccess().getBlobFieldTypeParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericTypesAccess().getINTEGERTerminalRuleCall_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getNumericTypesAccess().getINTEGERTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypesAccess().getLONGTerminalRuleCall_1()); }
		RULE_LONG
		{ after(grammarAccess.getNumericTypesAccess().getLONGTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypesAccess().getBIG_DECIMALTerminalRuleCall_2()); }
		RULE_BIG_DECIMAL
		{ after(grammarAccess.getNumericTypesAccess().getBIG_DECIMALTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypesAccess().getFLOATTerminalRuleCall_3()); }
		RULE_FLOAT
		{ after(grammarAccess.getNumericTypesAccess().getFLOATTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypesAccess().getDOUBLETerminalRuleCall_4()); }
		RULE_DOUBLE
		{ after(grammarAccess.getNumericTypesAccess().getDOUBLETerminalRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateTypesAccess().getLOCAL_DATETerminalRuleCall_0()); }
		RULE_LOCAL_DATE
		{ after(grammarAccess.getDateTypesAccess().getLOCAL_DATETerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateTypesAccess().getZONED_DATETIMETerminalRuleCall_1()); }
		RULE_ZONED_DATETIME
		{ after(grammarAccess.getDateTypesAccess().getZONED_DATETIMETerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDateTypesAccess().getINSTANTTerminalRuleCall_2()); }
		RULE_INSTANT
		{ after(grammarAccess.getDateTypesAccess().getINSTANTTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobTypesAccess().getBLOBTerminalRuleCall_0()); }
		RULE_BLOB
		{ after(grammarAccess.getBlobTypesAccess().getBLOBTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlobTypesAccess().getANY_BLOBTerminalRuleCall_1()); }
		RULE_ANY_BLOB
		{ after(grammarAccess.getBlobTypesAccess().getANY_BLOBTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBlobTypesAccess().getIMAGE_BLOBTerminalRuleCall_2()); }
		RULE_IMAGE_BLOB
		{ after(grammarAccess.getBlobTypesAccess().getIMAGE_BLOBTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBlobTypesAccess().getTEXT_BLOBTerminalRuleCall_3()); }
		RULE_TEXT_BLOB
		{ after(grammarAccess.getBlobTypesAccess().getTEXT_BLOBTerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValidators__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getRequiredAssignment_0()); }
		(rule__StringValidators__RequiredAssignment_0)
		{ after(grammarAccess.getStringValidatorsAccess().getRequiredAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStringValidatorsAccess().getMinLenghtAssignment_1()); }
		(rule__StringValidators__MinLenghtAssignment_1)
		{ after(grammarAccess.getStringValidatorsAccess().getMinLenghtAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStringValidatorsAccess().getMaxLenghtAssignment_2()); }
		(rule__StringValidators__MaxLenghtAssignment_2)
		{ after(grammarAccess.getStringValidatorsAccess().getMaxLenghtAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStringValidatorsAccess().getPatternAssignment_3()); }
		(rule__StringValidators__PatternAssignment_3)
		{ after(grammarAccess.getStringValidatorsAccess().getPatternAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValidators__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getRequiredAssignment_0()); }
		(rule__NumericValidators__RequiredAssignment_0)
		{ after(grammarAccess.getNumericValidatorsAccess().getRequiredAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getMinValueAssignment_1()); }
		(rule__NumericValidators__MinValueAssignment_1)
		{ after(grammarAccess.getNumericValidatorsAccess().getMinValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getMaxValueAssignment_2()); }
		(rule__NumericValidators__MaxValueAssignment_2)
		{ after(grammarAccess.getNumericValidatorsAccess().getMaxValueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobValidators__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getRequiredAssignment_0()); }
		(rule__BlobValidators__RequiredAssignment_0)
		{ after(grammarAccess.getBlobValidatorsAccess().getRequiredAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getMinBytesValueAssignment_1()); }
		(rule__BlobValidators__MinBytesValueAssignment_1)
		{ after(grammarAccess.getBlobValidatorsAccess().getMinBytesValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getMaxBytesValueAssignment_2()); }
		(rule__BlobValidators__MaxBytesValueAssignment_2)
		{ after(grammarAccess.getBlobValidatorsAccess().getMaxBytesValueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinalityAccess().getONE_TO_MANYTerminalRuleCall_0()); }
		RULE_ONE_TO_MANY
		{ after(grammarAccess.getCardinalityAccess().getONE_TO_MANYTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCardinalityAccess().getMANY_TO_ONETerminalRuleCall_1()); }
		RULE_MANY_TO_ONE
		{ after(grammarAccess.getCardinalityAccess().getMANY_TO_ONETerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCardinalityAccess().getONE_TO_ONETerminalRuleCall_2()); }
		RULE_ONE_TO_ONE
		{ after(grammarAccess.getCardinalityAccess().getONE_TO_ONETerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCardinalityAccess().getMANY_TO_MANYTerminalRuleCall_3()); }
		RULE_MANY_TO_MANY
		{ after(grammarAccess.getCardinalityAccess().getMANY_TO_MANYTerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getENTITY_KEYWORDTerminalRuleCall_0()); }
	RULE_ENTITY_KEYWORD
	{ after(grammarAccess.getEntityAccess().getENTITY_KEYWORDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2()); }
	(rule__Entity__Group_2__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_3()); }
	(rule__Entity__Group_3__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLPARENTerminalRuleCall_2_0()); }
	RULE_LPAREN
	{ after(grammarAccess.getEntityAccess().getLPARENTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__1__Impl
	rule__Entity__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getTableNameAssignment_2_1()); }
	(rule__Entity__TableNameAssignment_2_1)
	{ after(grammarAccess.getEntityAccess().getTableNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRPARENTerminalRuleCall_2_2()); }
	RULE_RPAREN
	{ after(grammarAccess.getEntityAccess().getRPARENTerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3__0__Impl
	rule__Entity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLBRACETerminalRuleCall_3_0()); }
	RULE_LBRACE
	{ after(grammarAccess.getEntityAccess().getLBRACETerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3__1__Impl
	rule__Entity__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_3_1()); }
	(rule__Entity__Group_3_1__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRBRACETerminalRuleCall_3_2()); }
	RULE_RBRACE
	{ after(grammarAccess.getEntityAccess().getRBRACETerminalRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3_1__0__Impl
	rule__Entity__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getFieldsAssignment_3_1_0()); }
	(rule__Entity__FieldsAssignment_3_1_0)
	{ after(grammarAccess.getEntityAccess().getFieldsAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_3_1_1()); }
	(rule__Entity__Group_3_1_1__0)*
	{ after(grammarAccess.getEntityAccess().getGroup_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3_1_1__0__Impl
	rule__Entity__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getCOMMATerminalRuleCall_3_1_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getEntityAccess().getCOMMATerminalRuleCall_3_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getFieldsAssignment_3_1_1_1()); }
	(rule__Entity__FieldsAssignment_3_1_1_1)
	{ after(grammarAccess.getEntityAccess().getFieldsAssignment_3_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveField__Group__0__Impl
	rule__PrimitiveField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveFieldAccess().getIdAssignment_0()); }
	(rule__PrimitiveField__IdAssignment_0)
	{ after(grammarAccess.getPrimitiveFieldAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveField__Group__1__Impl
	rule__PrimitiveField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveFieldAccess().getSEMICOLONTerminalRuleCall_1()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getPrimitiveFieldAccess().getSEMICOLONTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveFieldAccess().getTypeAssignment_2()); }
	(rule__PrimitiveField__TypeAssignment_2)
	{ after(grammarAccess.getPrimitiveFieldAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationField__Group__0__Impl
	rule__AssociationField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationFieldAccess().getTypeAssignment_0()); }
	(rule__AssociationField__TypeAssignment_0)
	{ after(grammarAccess.getAssociationFieldAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationField__Group__1__Impl
	rule__AssociationField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationFieldAccess().getGroup_1()); }
	(rule__AssociationField__Group_1__0)?
	{ after(grammarAccess.getAssociationFieldAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationField__Group__2__Impl
	rule__AssociationField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationFieldAccess().getIdAssignment_2()); }
	(rule__AssociationField__IdAssignment_2)
	{ after(grammarAccess.getAssociationFieldAccess().getIdAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationField__Group__3__Impl
	rule__AssociationField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationFieldAccess().getSEMICOLONTerminalRuleCall_3()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getAssociationFieldAccess().getSEMICOLONTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationField__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationFieldAccess().getTargetEntityAssignment_4()); }
	(rule__AssociationField__TargetEntityAssignment_4)
	{ after(grammarAccess.getAssociationFieldAccess().getTargetEntityAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationField__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationField__Group_1__0__Impl
	rule__AssociationField__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationFieldAccess().getLPARENTerminalRuleCall_1_0()); }
	RULE_LPAREN
	{ after(grammarAccess.getAssociationFieldAccess().getLPARENTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationField__Group_1__1__Impl
	rule__AssociationField__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationFieldAccess().getToSourcePropertyNameAssignment_1_1()); }
	(rule__AssociationField__ToSourcePropertyNameAssignment_1_1)
	{ after(grammarAccess.getAssociationFieldAccess().getToSourcePropertyNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationField__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationFieldAccess().getRPARENTerminalRuleCall_1_2()); }
	RULE_RPAREN
	{ after(grammarAccess.getAssociationFieldAccess().getRPARENTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringFieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFieldType__Group__0__Impl
	rule__StringFieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldTypeAccess().getNameAssignment_0()); }
	(rule__StringFieldType__NameAssignment_0)
	{ after(grammarAccess.getStringFieldTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFieldType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldTypeAccess().getConstraintsAssignment_1()); }
	(rule__StringFieldType__ConstraintsAssignment_1)*
	{ after(grammarAccess.getStringFieldTypeAccess().getConstraintsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericFieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericFieldType__Group__0__Impl
	rule__NumericFieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericFieldTypeAccess().getNameAssignment_0()); }
	(rule__NumericFieldType__NameAssignment_0)
	{ after(grammarAccess.getNumericFieldTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericFieldType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericFieldTypeAccess().getConstraintsAssignment_1()); }
	(rule__NumericFieldType__ConstraintsAssignment_1)*
	{ after(grammarAccess.getNumericFieldTypeAccess().getConstraintsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanFieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanFieldType__Group__0__Impl
	rule__BooleanFieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanFieldTypeAccess().getNameAssignment_0()); }
	(rule__BooleanFieldType__NameAssignment_0)
	{ after(grammarAccess.getBooleanFieldTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanFieldType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanFieldTypeAccess().getRequiredAssignment_1()); }
	(rule__BooleanFieldType__RequiredAssignment_1)?
	{ after(grammarAccess.getBooleanFieldTypeAccess().getRequiredAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateFieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateFieldType__Group__0__Impl
	rule__DateFieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateFieldTypeAccess().getTypeAssignment_0()); }
	(rule__DateFieldType__TypeAssignment_0)
	{ after(grammarAccess.getDateFieldTypeAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateFieldType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateFieldTypeAccess().getRequiredAssignment_1()); }
	(rule__DateFieldType__RequiredAssignment_1)?
	{ after(grammarAccess.getDateFieldTypeAccess().getRequiredAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlobFieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlobFieldType__Group__0__Impl
	rule__BlobFieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobFieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlobFieldTypeAccess().getNameAssignment_0()); }
	(rule__BlobFieldType__NameAssignment_0)
	{ after(grammarAccess.getBlobFieldTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobFieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlobFieldType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobFieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlobFieldTypeAccess().getConstraintsAssignment_1()); }
	(rule__BlobFieldType__ConstraintsAssignment_1)*
	{ after(grammarAccess.getBlobFieldTypeAccess().getConstraintsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternValidator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternValidator__Group__0__Impl
	rule__PatternValidator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternValidatorAccess().getPATTERNTerminalRuleCall_0()); }
	RULE_PATTERN
	{ after(grammarAccess.getPatternValidatorAccess().getPATTERNTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternValidator__Group__1__Impl
	rule__PatternValidator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternValidatorAccess().getLPARENTerminalRuleCall_1()); }
	RULE_LPAREN
	{ after(grammarAccess.getPatternValidatorAccess().getLPARENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternValidator__Group__2__Impl
	rule__PatternValidator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternValidatorAccess().getPATTERN_VALUETerminalRuleCall_2()); }
	RULE_PATTERN_VALUE
	{ after(grammarAccess.getPatternValidatorAccess().getPATTERN_VALUETerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternValidator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternValidatorAccess().getRPARENTerminalRuleCall_3()); }
	RULE_RPAREN
	{ after(grammarAccess.getPatternValidatorAccess().getRPARENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinValidator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinValidator__Group__0__Impl
	rule__MinValidator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinValidatorAccess().getMINTerminalRuleCall_0()); }
	RULE_MIN
	{ after(grammarAccess.getMinValidatorAccess().getMINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinValidator__Group__1__Impl
	rule__MinValidator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinValidatorAccess().getLPARENTerminalRuleCall_1()); }
	RULE_LPAREN
	{ after(grammarAccess.getMinValidatorAccess().getLPARENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinValidator__Group__2__Impl
	rule__MinValidator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinValidatorAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getMinValidatorAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinValidator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinValidatorAccess().getRPARENTerminalRuleCall_3()); }
	RULE_RPAREN
	{ after(grammarAccess.getMinValidatorAccess().getRPARENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxValidator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxValidator__Group__0__Impl
	rule__MaxValidator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxValidatorAccess().getMAXTerminalRuleCall_0()); }
	RULE_MAX
	{ after(grammarAccess.getMaxValidatorAccess().getMAXTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxValidator__Group__1__Impl
	rule__MaxValidator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxValidatorAccess().getLPARENTerminalRuleCall_1()); }
	RULE_LPAREN
	{ after(grammarAccess.getMaxValidatorAccess().getLPARENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxValidator__Group__2__Impl
	rule__MaxValidator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxValidatorAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getMaxValidatorAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxValidator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxValidatorAccess().getRPARENTerminalRuleCall_3()); }
	RULE_RPAREN
	{ after(grammarAccess.getMaxValidatorAccess().getRPARENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainModel__EntitiesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainModelAccess().getEntitiesEntityParserRuleCall_0()); }
		ruleentity
		{ after(grammarAccess.getDomainModelAccess().getEntitiesEntityParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__TableNameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getTableNameIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getTableNameIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FieldsAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getFieldsEntityFieldParserRuleCall_3_1_0_0()); }
		ruleentityField
		{ after(grammarAccess.getEntityAccess().getFieldsEntityFieldParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FieldsAssignment_3_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getFieldsEntityFieldParserRuleCall_3_1_1_1_0()); }
		ruleentityField
		{ after(grammarAccess.getEntityAccess().getFieldsEntityFieldParserRuleCall_3_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveField__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveFieldAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPrimitiveFieldAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveField__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveFieldAccess().getTypeFieldTypeParserRuleCall_2_0()); }
		rulefieldType
		{ after(grammarAccess.getPrimitiveFieldAccess().getTypeFieldTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationFieldAccess().getTypeCardinalityParserRuleCall_0_0()); }
		rulecardinality
		{ after(grammarAccess.getAssociationFieldAccess().getTypeCardinalityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__ToSourcePropertyNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationFieldAccess().getToSourcePropertyNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAssociationFieldAccess().getToSourcePropertyNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__IdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationFieldAccess().getIdIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAssociationFieldAccess().getIdIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationField__TargetEntityAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationFieldAccess().getTargetEntityEntityCrossReference_4_0()); }
		(
			{ before(grammarAccess.getAssociationFieldAccess().getTargetEntityEntityIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAssociationFieldAccess().getTargetEntityEntityIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getAssociationFieldAccess().getTargetEntityEntityCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFieldType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFieldTypeAccess().getNameStringTypeParserRuleCall_0_0()); }
		rulestringType
		{ after(grammarAccess.getStringFieldTypeAccess().getNameStringTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFieldType__ConstraintsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFieldTypeAccess().getConstraintsStringValidatorsParserRuleCall_1_0()); }
		rulestringValidators
		{ after(grammarAccess.getStringFieldTypeAccess().getConstraintsStringValidatorsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFieldType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericFieldTypeAccess().getNameNumericTypesParserRuleCall_0_0()); }
		rulenumericTypes
		{ after(grammarAccess.getNumericFieldTypeAccess().getNameNumericTypesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFieldType__ConstraintsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericFieldTypeAccess().getConstraintsNumericValidatorsParserRuleCall_1_0()); }
		rulenumericValidators
		{ after(grammarAccess.getNumericFieldTypeAccess().getConstraintsNumericValidatorsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFieldType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanFieldTypeAccess().getNameBOOLEAN_TYPETerminalRuleCall_0_0()); }
		RULE_BOOLEAN_TYPE
		{ after(grammarAccess.getBooleanFieldTypeAccess().getNameBOOLEAN_TYPETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFieldType__RequiredAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanFieldTypeAccess().getRequiredRequiredValidatorParserRuleCall_1_0()); }
		rulerequiredValidator
		{ after(grammarAccess.getBooleanFieldTypeAccess().getRequiredRequiredValidatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFieldType__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateFieldTypeAccess().getTypeDateTypesParserRuleCall_0_0()); }
		ruledateTypes
		{ after(grammarAccess.getDateFieldTypeAccess().getTypeDateTypesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFieldType__RequiredAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateFieldTypeAccess().getRequiredRequiredValidatorParserRuleCall_1_0()); }
		rulerequiredValidator
		{ after(grammarAccess.getDateFieldTypeAccess().getRequiredRequiredValidatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobFieldType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobFieldTypeAccess().getNameBlobTypesParserRuleCall_0_0()); }
		ruleblobTypes
		{ after(grammarAccess.getBlobFieldTypeAccess().getNameBlobTypesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobFieldType__ConstraintsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobFieldTypeAccess().getConstraintsBlobValidatorsParserRuleCall_1_0()); }
		ruleblobValidators
		{ after(grammarAccess.getBlobFieldTypeAccess().getConstraintsBlobValidatorsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValidators__RequiredAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
		rulerequiredValidator
		{ after(grammarAccess.getStringValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValidators__MinLenghtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getMinLenghtMinValidatorParserRuleCall_1_0()); }
		ruleminValidator
		{ after(grammarAccess.getStringValidatorsAccess().getMinLenghtMinValidatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValidators__MaxLenghtAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getMaxLenghtMaxValidatorParserRuleCall_2_0()); }
		rulemaxValidator
		{ after(grammarAccess.getStringValidatorsAccess().getMaxLenghtMaxValidatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValidators__PatternAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getPatternPatternValidatorParserRuleCall_3_0()); }
		rulepatternValidator
		{ after(grammarAccess.getStringValidatorsAccess().getPatternPatternValidatorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValidators__RequiredAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
		rulerequiredValidator
		{ after(grammarAccess.getNumericValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValidators__MinValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getMinValueMinValidatorParserRuleCall_1_0()); }
		ruleminValidator
		{ after(grammarAccess.getNumericValidatorsAccess().getMinValueMinValidatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValidators__MaxValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getMaxValueMaxValidatorParserRuleCall_2_0()); }
		rulemaxValidator
		{ after(grammarAccess.getNumericValidatorsAccess().getMaxValueMaxValidatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobValidators__RequiredAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
		rulerequiredValidator
		{ after(grammarAccess.getBlobValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobValidators__MinBytesValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getMinBytesValueMinValidatorParserRuleCall_1_0()); }
		ruleminValidator
		{ after(grammarAccess.getBlobValidatorsAccess().getMinBytesValueMinValidatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobValidators__MaxBytesValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getMaxBytesValueMaxValidatorParserRuleCall_2_0()); }
		rulemaxValidator
		{ after(grammarAccess.getBlobValidatorsAccess().getMaxBytesValueMaxValidatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ENTITY_KEYWORD : 'entity';

RULE_STRING_KEYWORD : 'String';

RULE_INTEGER : 'Integer';

RULE_LONG : 'Long';

RULE_BIG_DECIMAL : 'BigDecimal';

RULE_FLOAT : 'Float';

RULE_DOUBLE : 'Double';

RULE_BOOLEAN_TYPE : 'Boolean';

RULE_LOCAL_DATE : 'LocalDate';

RULE_ZONED_DATETIME : 'ZonedDateTime';

RULE_INSTANT : 'Instant';

RULE_BLOB : 'Blob';

RULE_ANY_BLOB : 'AnyBlob';

RULE_IMAGE_BLOB : 'ImageBlob';

RULE_TEXT_BLOB : 'TextBlob';

RULE_ONE_TO_MANY : 'OneToMany';

RULE_MANY_TO_ONE : 'ManyToOne';

RULE_ONE_TO_ONE : 'OneToOne';

RULE_MANY_TO_MANY : 'ManyToMany';

RULE_PATTERN_VALUE : '"' .* '"';

RULE_MIN : 'min';

RULE_MAX : 'max';

RULE_NULL_LITERAL : 'null';

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_LBRACE : '{';

RULE_RBRACE : '}';

RULE_LBRACK : '[';

RULE_RBRACK : ']';

RULE_SEMI : ';';

RULE_COMMA : ',';

RULE_DOT : '.';

RULE_ELLIPSIS : '...';

RULE_AT : '@';

RULE_COLONCOLON : '::';

RULE_SEMICOLON : ':';

RULE_REQUIRED : 'required';

RULE_PATTERN : 'pattern';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
