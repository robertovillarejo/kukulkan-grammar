/**
 * generated by Xtext 2.13.0
 */
package mx.infotec.dads.kukulkan.kukulkan.impl;

import mx.infotec.dads.kukulkan.kukulkan.KukulkanPackage;
import mx.infotec.dads.kukulkan.kukulkan.blobValidators;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>blob Validators</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mx.infotec.dads.kukulkan.kukulkan.impl.blobValidatorsImpl#getRequired <em>Required</em>}</li>
 *   <li>{@link mx.infotec.dads.kukulkan.kukulkan.impl.blobValidatorsImpl#getMinBytesValue <em>Min Bytes Value</em>}</li>
 *   <li>{@link mx.infotec.dads.kukulkan.kukulkan.impl.blobValidatorsImpl#getMaxBytesValue <em>Max Bytes Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class blobValidatorsImpl extends MinimalEObjectImpl.Container implements blobValidators
{
  /**
   * The default value of the '{@link #getRequired() <em>Required</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequired()
   * @generated
   * @ordered
   */
  protected static final String REQUIRED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRequired() <em>Required</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequired()
   * @generated
   * @ordered
   */
  protected String required = REQUIRED_EDEFAULT;

  /**
   * The default value of the '{@link #getMinBytesValue() <em>Min Bytes Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinBytesValue()
   * @generated
   * @ordered
   */
  protected static final String MIN_BYTES_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMinBytesValue() <em>Min Bytes Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinBytesValue()
   * @generated
   * @ordered
   */
  protected String minBytesValue = MIN_BYTES_VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxBytesValue() <em>Max Bytes Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxBytesValue()
   * @generated
   * @ordered
   */
  protected static final String MAX_BYTES_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMaxBytesValue() <em>Max Bytes Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxBytesValue()
   * @generated
   * @ordered
   */
  protected String maxBytesValue = MAX_BYTES_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected blobValidatorsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KukulkanPackage.Literals.BLOB_VALIDATORS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRequired()
  {
    return required;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRequired(String newRequired)
  {
    String oldRequired = required;
    required = newRequired;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KukulkanPackage.BLOB_VALIDATORS__REQUIRED, oldRequired, required));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMinBytesValue()
  {
    return minBytesValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinBytesValue(String newMinBytesValue)
  {
    String oldMinBytesValue = minBytesValue;
    minBytesValue = newMinBytesValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KukulkanPackage.BLOB_VALIDATORS__MIN_BYTES_VALUE, oldMinBytesValue, minBytesValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMaxBytesValue()
  {
    return maxBytesValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxBytesValue(String newMaxBytesValue)
  {
    String oldMaxBytesValue = maxBytesValue;
    maxBytesValue = newMaxBytesValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KukulkanPackage.BLOB_VALIDATORS__MAX_BYTES_VALUE, oldMaxBytesValue, maxBytesValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KukulkanPackage.BLOB_VALIDATORS__REQUIRED:
        return getRequired();
      case KukulkanPackage.BLOB_VALIDATORS__MIN_BYTES_VALUE:
        return getMinBytesValue();
      case KukulkanPackage.BLOB_VALIDATORS__MAX_BYTES_VALUE:
        return getMaxBytesValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KukulkanPackage.BLOB_VALIDATORS__REQUIRED:
        setRequired((String)newValue);
        return;
      case KukulkanPackage.BLOB_VALIDATORS__MIN_BYTES_VALUE:
        setMinBytesValue((String)newValue);
        return;
      case KukulkanPackage.BLOB_VALIDATORS__MAX_BYTES_VALUE:
        setMaxBytesValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KukulkanPackage.BLOB_VALIDATORS__REQUIRED:
        setRequired(REQUIRED_EDEFAULT);
        return;
      case KukulkanPackage.BLOB_VALIDATORS__MIN_BYTES_VALUE:
        setMinBytesValue(MIN_BYTES_VALUE_EDEFAULT);
        return;
      case KukulkanPackage.BLOB_VALIDATORS__MAX_BYTES_VALUE:
        setMaxBytesValue(MAX_BYTES_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KukulkanPackage.BLOB_VALIDATORS__REQUIRED:
        return REQUIRED_EDEFAULT == null ? required != null : !REQUIRED_EDEFAULT.equals(required);
      case KukulkanPackage.BLOB_VALIDATORS__MIN_BYTES_VALUE:
        return MIN_BYTES_VALUE_EDEFAULT == null ? minBytesValue != null : !MIN_BYTES_VALUE_EDEFAULT.equals(minBytesValue);
      case KukulkanPackage.BLOB_VALIDATORS__MAX_BYTES_VALUE:
        return MAX_BYTES_VALUE_EDEFAULT == null ? maxBytesValue != null : !MAX_BYTES_VALUE_EDEFAULT.equals(maxBytesValue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (required: ");
    result.append(required);
    result.append(", minBytesValue: ");
    result.append(minBytesValue);
    result.append(", maxBytesValue: ");
    result.append(maxBytesValue);
    result.append(')');
    return result.toString();
  }

} //blobValidatorsImpl
