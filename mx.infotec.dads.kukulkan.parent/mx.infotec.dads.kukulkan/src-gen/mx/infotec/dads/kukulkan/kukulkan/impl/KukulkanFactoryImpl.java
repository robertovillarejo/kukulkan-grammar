/**
 * generated by Xtext 2.13.0
 */
package mx.infotec.dads.kukulkan.kukulkan.impl;

import mx.infotec.dads.kukulkan.kukulkan.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class KukulkanFactoryImpl extends EFactoryImpl implements KukulkanFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static KukulkanFactory init()
  {
    try
    {
      KukulkanFactory theKukulkanFactory = (KukulkanFactory)EPackage.Registry.INSTANCE.getEFactory(KukulkanPackage.eNS_URI);
      if (theKukulkanFactory != null)
      {
        return theKukulkanFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new KukulkanFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public KukulkanFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case KukulkanPackage.DOMAIN_MODEL: return createdomainModel();
      case KukulkanPackage.ENTITY: return createentity();
      case KukulkanPackage.ENTITY_FIELD: return createentityField();
      case KukulkanPackage.PRIMITIVE_FIELD: return createprimitiveField();
      case KukulkanPackage.FIELD_TYPE: return createfieldType();
      case KukulkanPackage.ASSOCIATION_FIELD: return createassociationField();
      case KukulkanPackage.STRING_FIELD_TYPE: return createstringFieldType();
      case KukulkanPackage.NUMERIC_FIELD_TYPE: return createnumericFieldType();
      case KukulkanPackage.BOOLEAN_FIELD_TYPE: return createbooleanFieldType();
      case KukulkanPackage.DATE_FIELD_TYPE: return createdateFieldType();
      case KukulkanPackage.BLOB_FIELD_TYPE: return createblobFieldType();
      case KukulkanPackage.STRING_VALIDATORS: return createstringValidators();
      case KukulkanPackage.NUMERIC_VALIDATORS: return createnumericValidators();
      case KukulkanPackage.BLOB_VALIDATORS: return createblobValidators();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public domainModel createdomainModel()
  {
    domainModelImpl domainModel = new domainModelImpl();
    return domainModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public entity createentity()
  {
    entityImpl entity = new entityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public entityField createentityField()
  {
    entityFieldImpl entityField = new entityFieldImpl();
    return entityField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public primitiveField createprimitiveField()
  {
    primitiveFieldImpl primitiveField = new primitiveFieldImpl();
    return primitiveField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public fieldType createfieldType()
  {
    fieldTypeImpl fieldType = new fieldTypeImpl();
    return fieldType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public associationField createassociationField()
  {
    associationFieldImpl associationField = new associationFieldImpl();
    return associationField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public stringFieldType createstringFieldType()
  {
    stringFieldTypeImpl stringFieldType = new stringFieldTypeImpl();
    return stringFieldType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public numericFieldType createnumericFieldType()
  {
    numericFieldTypeImpl numericFieldType = new numericFieldTypeImpl();
    return numericFieldType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public booleanFieldType createbooleanFieldType()
  {
    booleanFieldTypeImpl booleanFieldType = new booleanFieldTypeImpl();
    return booleanFieldType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public dateFieldType createdateFieldType()
  {
    dateFieldTypeImpl dateFieldType = new dateFieldTypeImpl();
    return dateFieldType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public blobFieldType createblobFieldType()
  {
    blobFieldTypeImpl blobFieldType = new blobFieldTypeImpl();
    return blobFieldType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public stringValidators createstringValidators()
  {
    stringValidatorsImpl stringValidators = new stringValidatorsImpl();
    return stringValidators;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public numericValidators createnumericValidators()
  {
    numericValidatorsImpl numericValidators = new numericValidatorsImpl();
    return numericValidators;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public blobValidators createblobValidators()
  {
    blobValidatorsImpl blobValidators = new blobValidatorsImpl();
    return blobValidators;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public KukulkanPackage getKukulkanPackage()
  {
    return (KukulkanPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static KukulkanPackage getPackage()
  {
    return KukulkanPackage.eINSTANCE;
  }

} //KukulkanFactoryImpl
