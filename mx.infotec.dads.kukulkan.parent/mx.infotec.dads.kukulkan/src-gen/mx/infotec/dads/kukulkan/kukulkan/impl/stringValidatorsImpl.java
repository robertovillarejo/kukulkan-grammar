/**
 * generated by Xtext 2.13.0
 */
package mx.infotec.dads.kukulkan.kukulkan.impl;

import mx.infotec.dads.kukulkan.kukulkan.KukulkanPackage;
import mx.infotec.dads.kukulkan.kukulkan.stringValidators;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>string Validators</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mx.infotec.dads.kukulkan.kukulkan.impl.stringValidatorsImpl#getRequired <em>Required</em>}</li>
 *   <li>{@link mx.infotec.dads.kukulkan.kukulkan.impl.stringValidatorsImpl#getMinLenght <em>Min Lenght</em>}</li>
 *   <li>{@link mx.infotec.dads.kukulkan.kukulkan.impl.stringValidatorsImpl#getMaxLenght <em>Max Lenght</em>}</li>
 *   <li>{@link mx.infotec.dads.kukulkan.kukulkan.impl.stringValidatorsImpl#getPattern <em>Pattern</em>}</li>
 * </ul>
 *
 * @generated
 */
public class stringValidatorsImpl extends MinimalEObjectImpl.Container implements stringValidators
{
  /**
   * The default value of the '{@link #getRequired() <em>Required</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequired()
   * @generated
   * @ordered
   */
  protected static final String REQUIRED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRequired() <em>Required</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequired()
   * @generated
   * @ordered
   */
  protected String required = REQUIRED_EDEFAULT;

  /**
   * The default value of the '{@link #getMinLenght() <em>Min Lenght</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinLenght()
   * @generated
   * @ordered
   */
  protected static final String MIN_LENGHT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMinLenght() <em>Min Lenght</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinLenght()
   * @generated
   * @ordered
   */
  protected String minLenght = MIN_LENGHT_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxLenght() <em>Max Lenght</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxLenght()
   * @generated
   * @ordered
   */
  protected static final String MAX_LENGHT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMaxLenght() <em>Max Lenght</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxLenght()
   * @generated
   * @ordered
   */
  protected String maxLenght = MAX_LENGHT_EDEFAULT;

  /**
   * The default value of the '{@link #getPattern() <em>Pattern</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPattern()
   * @generated
   * @ordered
   */
  protected static final String PATTERN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPattern() <em>Pattern</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPattern()
   * @generated
   * @ordered
   */
  protected String pattern = PATTERN_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected stringValidatorsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KukulkanPackage.Literals.STRING_VALIDATORS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRequired()
  {
    return required;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRequired(String newRequired)
  {
    String oldRequired = required;
    required = newRequired;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KukulkanPackage.STRING_VALIDATORS__REQUIRED, oldRequired, required));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMinLenght()
  {
    return minLenght;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinLenght(String newMinLenght)
  {
    String oldMinLenght = minLenght;
    minLenght = newMinLenght;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KukulkanPackage.STRING_VALIDATORS__MIN_LENGHT, oldMinLenght, minLenght));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMaxLenght()
  {
    return maxLenght;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxLenght(String newMaxLenght)
  {
    String oldMaxLenght = maxLenght;
    maxLenght = newMaxLenght;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KukulkanPackage.STRING_VALIDATORS__MAX_LENGHT, oldMaxLenght, maxLenght));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPattern()
  {
    return pattern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPattern(String newPattern)
  {
    String oldPattern = pattern;
    pattern = newPattern;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KukulkanPackage.STRING_VALIDATORS__PATTERN, oldPattern, pattern));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KukulkanPackage.STRING_VALIDATORS__REQUIRED:
        return getRequired();
      case KukulkanPackage.STRING_VALIDATORS__MIN_LENGHT:
        return getMinLenght();
      case KukulkanPackage.STRING_VALIDATORS__MAX_LENGHT:
        return getMaxLenght();
      case KukulkanPackage.STRING_VALIDATORS__PATTERN:
        return getPattern();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KukulkanPackage.STRING_VALIDATORS__REQUIRED:
        setRequired((String)newValue);
        return;
      case KukulkanPackage.STRING_VALIDATORS__MIN_LENGHT:
        setMinLenght((String)newValue);
        return;
      case KukulkanPackage.STRING_VALIDATORS__MAX_LENGHT:
        setMaxLenght((String)newValue);
        return;
      case KukulkanPackage.STRING_VALIDATORS__PATTERN:
        setPattern((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KukulkanPackage.STRING_VALIDATORS__REQUIRED:
        setRequired(REQUIRED_EDEFAULT);
        return;
      case KukulkanPackage.STRING_VALIDATORS__MIN_LENGHT:
        setMinLenght(MIN_LENGHT_EDEFAULT);
        return;
      case KukulkanPackage.STRING_VALIDATORS__MAX_LENGHT:
        setMaxLenght(MAX_LENGHT_EDEFAULT);
        return;
      case KukulkanPackage.STRING_VALIDATORS__PATTERN:
        setPattern(PATTERN_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KukulkanPackage.STRING_VALIDATORS__REQUIRED:
        return REQUIRED_EDEFAULT == null ? required != null : !REQUIRED_EDEFAULT.equals(required);
      case KukulkanPackage.STRING_VALIDATORS__MIN_LENGHT:
        return MIN_LENGHT_EDEFAULT == null ? minLenght != null : !MIN_LENGHT_EDEFAULT.equals(minLenght);
      case KukulkanPackage.STRING_VALIDATORS__MAX_LENGHT:
        return MAX_LENGHT_EDEFAULT == null ? maxLenght != null : !MAX_LENGHT_EDEFAULT.equals(maxLenght);
      case KukulkanPackage.STRING_VALIDATORS__PATTERN:
        return PATTERN_EDEFAULT == null ? pattern != null : !PATTERN_EDEFAULT.equals(pattern);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (required: ");
    result.append(required);
    result.append(", minLenght: ");
    result.append(minLenght);
    result.append(", maxLenght: ");
    result.append(maxLenght);
    result.append(", pattern: ");
    result.append(pattern);
    result.append(')');
    return result.toString();
  }

} //stringValidatorsImpl
